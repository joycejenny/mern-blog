{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\REINVENT\\\\mern-blog\\\\client\\\\src\\\\pages\\\\RegisterPage.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RegisterPage() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  async function register(ev) {\n    ev.preventDefault();\n    const response = await fetch(\"http://localhost:4000/register\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        username,\n        password\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    /* if (response.status === 200) {\r\n      alert(\"reg successful\");\r\n    } else {\r\n      alert(\"reg failed\");\r\n    }\r\n    } */\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"register\",\n      onSubmit: register,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"username\",\n        value: username,\n        onChange: ev => setUsername(ev.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"password\",\n        value: password,\n        onChange: ev => setPassword(ev.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  }\n}\n_s(RegisterPage, \"Lrw7JeD9zj6OUWhT/IH4OIvPKEk=\");\n_c = RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","RegisterPage","_s","username","setUsername","password","setPassword","register","ev","preventDefault","response","fetch","method","body","JSON","stringify","headers","className","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/REINVENT/mern-blog/client/src/pages/RegisterPage.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nexport default function RegisterPage() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  async function register(ev) {\r\n    ev.preventDefault();\r\n\r\n    \r\n\r\n    const response = await fetch(\"http://localhost:4000/register\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({ username, password }),\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n    /* if (response.status === 200) {\r\n      alert(\"reg successful\");\r\n    } else {\r\n      alert(\"reg failed\");\r\n    }\r\n  } */\r\n    return (\r\n      <form className=\"register\" onSubmit={register}>\r\n        <h1>Register</h1>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"username\"\r\n          value={username}\r\n          onChange={(ev) => setUsername(ev.target.value)}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"password\"\r\n          value={password}\r\n          onChange={(ev) => setPassword(ev.target.value)}\r\n        />\r\n        <button>Register</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,eAAe,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACrC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,eAAeS,QAAQA,CAACC,EAAE,EAAE;IAC1BA,EAAE,CAACC,cAAc,CAAC,CAAC;IAInB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;MAC7DC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEZ,QAAQ;QAAEE;MAAS,CAAC,CAAC;MAC5CW,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB;IAChD,CAAC,CAAC;IACF;AACJ;AACA;AACA;AACA;AACA;IACI,oBACEhB,OAAA;MAAMiB,SAAS,EAAC,UAAU;MAACC,QAAQ,EAAEX,QAAS;MAAAY,QAAA,gBAC5CnB,OAAA;QAAAmB,QAAA,EAAI;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjBvB,OAAA;QACEwB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,UAAU;QACtBC,KAAK,EAAEvB,QAAS;QAChBwB,QAAQ,EAAGnB,EAAE,IAAKJ,WAAW,CAACI,EAAE,CAACoB,MAAM,CAACF,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,eACFvB,OAAA;QACEwB,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC,UAAU;QACtBC,KAAK,EAAErB,QAAS;QAChBsB,QAAQ,EAAGnB,EAAE,IAAKF,WAAW,CAACE,EAAE,CAACoB,MAAM,CAACF,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,eACFvB,OAAA;QAAAmB,QAAA,EAAQ;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC;EAEX;AACF;AAACrB,EAAA,CAtCuBD,YAAY;AAAA4B,EAAA,GAAZ5B,YAAY;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}